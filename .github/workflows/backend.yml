name: Backend CI/CD

on:
    push:
        branches:
            - main
            - develop
        paths:
            - "backend/**"
            - "docker/backend/**"
            - ".github/workflows/backend.yml"
    pull_request:
        branches:
            - main
            - develop
        paths:
            - "backend/**"
            - "docker/backend/**"

env:
    REGISTRY: registry.digitalocean.com
    REGISTRY_NAME: cyberlab-registry
    IMAGE_NAME: cyberlab-backend

jobs:
    # Job 1: Lint and Test
    test:
        name: Lint & Test Backend
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"
                  cache-dependency-path: backend/package-lock.json

            - name: Install dependencies
              working-directory: ./backend
              run: npm ci

            - name: Run linter (if configured)
              working-directory: ./backend
              run: npm run lint || echo "No lint script found"
              continue-on-error: true

            - name: Run tests (if configured)
              working-directory: ./backend
              run: npm test || echo "No test script found"
              continue-on-error: true
              env:
                  NODE_ENV: test

    # Job 2: Security Scanning
    security-scan:
        name: Security Scan
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Run npm audit
              working-directory: ./backend
              run: npm audit --audit-level=moderate || true

            - name: Run Trivy vulnerability scanner
              uses: aquasecurity/trivy-action@master
              with:
                  scan-type: "fs"
                  scan-ref: "./backend"
                  format: "sarif"
                  output: "trivy-results.sarif"

    # Job 3: Build and Push Docker Image
    docker-build-push:
        name: Build & Push Docker Image
        needs: [test, security-scan]
        runs-on: ubuntu-latest
        if: github.event_name == 'push'

        permissions:
            contents: read
            packages: write

        outputs:
            image-tag: ${{ steps.meta.outputs.tags }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to DigitalOcean Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ secrets.DIGITALOCEAN_TOKEN }}
                  password: ${{ secrets.DIGITALOCEAN_TOKEN }}

            - name: Extract metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.REGISTRY_NAME }}/${{ env.IMAGE_NAME }}
                  tags: |
                      type=ref,event=branch
                      type=sha,prefix={{branch}}-
                      type=raw,value=latest,enable={{is_default_branch}}

            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: ./backend
                  file: ./docker/backend/Dockerfile
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.REGISTRY_NAME }}/${{ env.IMAGE_NAME }}:buildcache
                  cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.REGISTRY_NAME }}/${{ env.IMAGE_NAME }}:buildcache,mode=max

    # Job 4: Update K8s Manifests
    update-manifests:
        name: Update K8s Manifests
        needs: docker-build-push
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main'

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Update image tag in deployment
              run: |
                  IMAGE_TAG="${GITHUB_SHA::7}"
                  sed -i "s|image: registry.digitalocean.com/cyberlab-registry/cyberlab-backend:.*|image: ${{ env.REGISTRY }}/${{ env.REGISTRY_NAME }}/${{ env.IMAGE_NAME }}:main-${IMAGE_TAG}|g" kubernetes/backend/deployment.yaml

            - name: Commit and push changes
              run: |
                  git config --global user.name "github-actions[bot]"
                  git config --global user.email "github-actions[bot]@users.noreply.github.com"
                  git add kubernetes/backend/deployment.yaml
                  git commit -m "Update backend image to main-${GITHUB_SHA::7}" || echo "No changes to commit"
                  git push

    # Job 5: Sync ArgoCD
    notify-argocd:
        name: Sync ArgoCD
        needs: update-manifests
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main'

        steps:
            - name: Trigger ArgoCD Sync
              run: |
                  curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
                  chmod +x /usr/local/bin/argocd

                  argocd login ${{ secrets.ARGOCD_SERVER }} \
                    --username ${{ secrets.ARGOCD_USERNAME }} \
                    --password ${{ secrets.ARGOCD_PASSWORD }} \
                    --insecure

                  argocd app sync backend-app --prune
              continue-on-error: true
